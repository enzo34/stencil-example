{"version":3,"names":["loginFormCss","LoginFormStyle0","LoginForm","handleEmailChange","event","this","email","target","value","handlePasswordChange","password","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","loginSuccess","emit","error","loginError","message","render","h","key","onSubmit","type","onInput","myComponentCss","MyComponentStyle0","MyComponent","getText","format","first","middle","last"],"sources":["src/components/login-form/login-form.css?tag=login-form&encapsulation=shadow","src/components/login-form/login-form.tsx","src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":["form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n  }\r\n  \r\n  label {\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  input {\r\n    padding: 8px;\r\n    margin-top: 5px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    background-color: blue;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: darkblue;\r\n  }\r\n  ","import { Component, h, State, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n    tag: 'login-form', // Le nom du tag du composant\r\n    styleUrl: 'login-form.css', // Lien vers le fichier de style\r\n    shadow: true // Utilisation du Shadow DOM pour l'encapsulation\r\n})\r\nexport class LoginForm {\r\n    @State() email: string = '';\r\n    @State() password: string = '';\r\n\r\n    // EventEmitter pour émettre des événements sur succès ou échec\r\n    @Event() loginSuccess: EventEmitter;\r\n    @Event() loginError: EventEmitter;\r\n\r\n    private handleEmailChange(event: Event) {\r\n        this.email = (event.target as HTMLInputElement).value;\r\n    }\r\n\r\n    private handlePasswordChange(event: Event) {\r\n        this.password = (event.target as HTMLInputElement).value;\r\n    }\r\n\r\n    private async handleSubmit(event: Event) {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:3000/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email: this.email, password: this.password })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            this.loginSuccess.emit(data);\r\n        } catch (error) {\r\n            this.loginError.emit(error.message);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <label>\r\n                    Email:\r\n                    <input type=\"email\" value={this.email} onInput={(event) => this.handleEmailChange(event)} />\r\n                </label>\r\n                <label>\r\n                    Password:\r\n                    <input type=\"password\" value={this.password} onInput={(event) => this.handlePasswordChange(event)} />\r\n                </label>\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n",":host {\n  display: block;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { format } from '../../utils/utils';\n\n@Component({\n  tag: 'my-component',\n  styleUrl: 'my-component.css',\n  shadow: true,\n})\nexport class MyComponent {\n  /**\n   * The first name\n   */\n  @Prop() first: string;\n\n  /**\n   * The middle name\n   */\n  @Prop() middle: string;\n\n  /**\n   * The last name\n   */\n  @Prop() last: string;\n\n  private getText(): string {\n    return format(this.first, this.middle, this.last);\n  }\n\n  render() {\n    return <div>Hello, World! I'm {this.getText()}</div>;\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAe,yOACrB,MAAAC,EAAeD,E,MCMFE,EAAS,M,sHACO,G,cACG,E,CAMpB,iBAAAC,CAAkBC,GACtBC,KAAKC,MAASF,EAAMG,OAA4BC,K,CAG5C,oBAAAC,CAAqBL,GACzBC,KAAKK,SAAYN,EAAMG,OAA4BC,K,CAG/C,kBAAMG,CAAaP,GACvBA,EAAMQ,iBACN,IACI,MAAMC,QAAiBC,MAAM,8BAA+B,CACxDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEb,MAAOD,KAAKC,MAAOI,SAAUL,KAAKK,aAG7D,IAAKG,EAASO,GAAI,CACd,MAAM,IAAIC,MAAM,uBAAuBR,EAASS,S,CAGpD,MAAMC,QAAaV,EAASW,OAC5BnB,KAAKoB,aAAaC,KAAKH,E,CACzB,MAAOI,GACLtB,KAAKuB,WAAWF,KAAKC,EAAME,Q,EAInC,MAAAC,GACI,OACIC,EAAA,QAAAC,IAAA,2CAAMC,SAAW7B,GAAUC,KAAKM,aAAaP,IACzC2B,EAAA,SAAAC,IAAA,qDAEID,EAAA,SAAAC,IAAA,2CAAOE,KAAK,QAAQ1B,MAAOH,KAAKC,MAAO6B,QAAU/B,GAAUC,KAAKF,kBAAkBC,MAEtF2B,EAAA,SAAAC,IAAA,wDAEID,EAAA,SAAAC,IAAA,2CAAOE,KAAK,WAAW1B,MAAOH,KAAKK,SAAUyB,QAAU/B,GAAUC,KAAKI,qBAAqBL,MAE/F2B,EAAA,UAAAC,IAAA,2CAAQE,KAAK,UAAQ,S,aCxDrC,MAAME,EAAiB,uBACvB,MAAAC,EAAeD,E,MCOFE,EAAW,M,wFAgBd,OAAAC,GACN,OAAOC,EAAOnC,KAAKoC,MAAOpC,KAAKqC,OAAQrC,KAAKsC,K,CAG9C,MAAAb,GACE,OAAOC,EAAA,OAAAC,IAAA,iEAAwB3B,KAAKkC,U"}